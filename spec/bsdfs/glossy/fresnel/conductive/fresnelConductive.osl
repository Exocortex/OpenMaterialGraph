// reference: Chapter 9 of BPR, Pharr et al.
float fresnelConductive(float n, float k, float ci) {
    float k2 = k*k;

    // perpendicular light polarization
    float rs_num = n*n + k2 - 2*n*ci + ci*ci;
    float rs_den = n*n + k2 + 2*n*ci + ci*ci;
    float rs = rs_num / rs_den;
     
    // parallel light polarization
    float rp_num = (n*n + k2)*ci*ci - 2*n*ci + 1;
    float rp_den = (n*n + k2)*ci*ci + 2*n*ci + 1;
    float rp = rp_num / rp_den;
     
    return clamp( 0.5*( rs+rp ), 0.0, 1.0 );
}

surface omg_bsfd_fresnelConductive(
    color iorT,
    color kappa,
  )
{
    float ci = abs( dot( -I,N ) );

    float red   = fresnelConductive( iorT[0], k[0], ci );
    float green = fresnelConductive( iorT[1], k[1], ci );
    float blue  = fresnelConductive( iorT[2], k[2], ci );

    Ci = Ks * Cs * reflection( N, ior );
}
