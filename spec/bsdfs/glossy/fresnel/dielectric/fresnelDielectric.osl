// reference: Chapter 9 of BPR, Pharr et al.
float fresnelDielectric(float ni, float ci, float nt, float ct) {
    // perpendicular light polarization
    float rs_num = ni*ci - nt-ct;
    float rs_den = ni*ci + nt-ct;
    float rs = rs_num / rs_den;
     
    // parallel light polarization
    float rp_num = nt*ci - ni*ct;
    float rp_den = nt*ci + ni*ct;
    float rp = rp_num / rp_den;
     
    return clamp( 0.5*( rs+rp ), 0.0, 1.0 );
}
surface omg_bsfd_dielectric(
    color iorI,
    color iorT,
  )
{
    float ci = abs( dot( -I,N ) );
    // TODO: how to determine ct?
    
    float red   = fresnelDielectric( iorI[0], ci, iorT[2], ct );
    float green = fresnelDielectric( iorI[1], ci, iorT[2], ct );
    float blue  = fresnelDielectric( iorI[2], ci, iorT[2], ct );

    Ci = Ks * Cs * reflection( N, ior );
}
