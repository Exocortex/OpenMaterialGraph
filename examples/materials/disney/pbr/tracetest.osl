shader tracetest2(
    normal Normal = N,
    float Distance = 10,
    float NoiseFactor = 0.5,
    float NoiseScale = 100,
    output color TraceRandom = 0.0)

{
    normal NewNorm = Normal;
    // Create a randomised normal to trace with.
    vector RandomVec = vector(0,0,0);
    vector NormalVec = transform("common", N);
    RandomVec = NormalVec + (NoiseFactor * noise("perlin", P * NoiseScale));
    RandomVec = normalize(RandomVec);
    int Hit2 = trace(P, RandomVec, "maxdist", Distance);
    if (Hit2) {
        float Dist = 0.0;
        // Get the hit distance:
        int HitTrace = getmessage("trace", "hitdist", Dist);
        // Turn Hit Distance into output:
        float Grad = 1 - Dist/Distance;
        TraceRandom = pow(Grad,2);
        }
}